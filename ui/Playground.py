import queue
import sys
import streamlit as st

from streamlit.runtime import Runtime
from streamlit.web import cli as stcli

from ui.bot_container import bot_container
from app.app import create_app, get_app
from ui.session_monitoring import run_thread_session_monitoring
from ui.sidebar import project_selection
from ui.utils.utils import disable_input_focusout

st.set_page_config(layout="wide")

BOT_CONTAINER_WIDTH = 0.3


def playground():
    """Show the playground container"""
    app = get_app()
    with st.sidebar:
        project_selection()

    if 'projects' not in st.session_state:
        st.session_state['projects'] = {}
    if 'selected_project' not in st.session_state and app.projects:
        st.session_state['selected_project'] = app.projects[0]

    project = st.session_state['selected_project'] if 'selected_project' in st.session_state else None

    if project and project.name not in st.session_state['projects']:
        st.session_state['projects'][project.name] = {
            'history': [],
            'queue': queue.Queue(),
            'plot': None,
            'table': None,
        }

    st.title('ðŸ“Š BESSER Conversational Data Analysis')
    st.subheader("ðŸ¤– Chat assistance")

    bot_col, dash_col = st.columns([BOT_CONTAINER_WIDTH, 1 - BOT_CONTAINER_WIDTH])
    with bot_col:
        bot_container()
    with dash_col:
        # TODO: SPECIFIC METHOD FOR DASHBOARD, LIKE bot_container()
        if project:
            tab_data, tab_plot = st.tabs(['Data', 'Plot'])

            with tab_data:
                if not st.session_state['projects'][project.name]['table']:
                    st.write(project.df)
                else:
                    st.write(st.session_state['projects'][project.name]['table'])

            with tab_plot:
                if not st.session_state['projects'][project.name]['plot']:
                    st.info(
                        'Here you can view some graphical answers generated by the bot, like line charts or histograms.',
                        icon='ðŸ’¡'
                    )
                else:
                    st.plotly_chart(st.session_state['projects'][project.name]['plot'], use_container_width=True)

        else:
            st.info(
                'Here is the dashboard where you can visualize the answers generated by the bot.',
                icon='ðŸ’¡'
            )


if __name__ == "__main__":
    if st.runtime.exists():
        # Create the app, only 1 time, shared across sessions
        create_app()
        # Run session monitoring in another thread, only 1 time
        run_thread_session_monitoring()
        # Run the Playground UI
        playground()
        disable_input_focusout()
    else:
        sys.argv = ["streamlit", "run", sys.argv[0]]
        sys.exit(stcli.main())
